[{"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\index.js":"1","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reportWebVitals.js":"2","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\App.js":"3","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\HomeScreen.js":"4","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\ProductScreen.js":"5","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\store.js":"6","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\productReducers.js":"7","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\productConstants.js":"10","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\productActions.js":"11","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\CartScreen.js":"12","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\cartReducers.js":"13","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\cartConstants.js":"14","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\cartActions.js":"15","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\SigninScreen.js":"16","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\userReducers.js":"17","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\userConstants.js":"18","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\userActions.js":"19","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\RegisterScreen.js":"20","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductsScreen.js":"21","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ShippingScreen.js":"22","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\components\\CheckoutSteps.js":"23","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\PaymentScreen.js":"24","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"25"},{"size":283,"mtime":1608467306747,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":2877,"mtime":1608675065944,"results":"29","hashOfConfig":"27"},{"size":1501,"mtime":1608415432278,"results":"30","hashOfConfig":"27"},{"size":2056,"mtime":1608412242853,"results":"31","hashOfConfig":"27"},{"size":1445,"mtime":1608675450272,"results":"32","hashOfConfig":"27"},{"size":2158,"mtime":1608639514144,"results":"33","hashOfConfig":"27"},{"size":1504,"mtime":1608615766943,"results":"34","hashOfConfig":"27"},{"size":3253,"mtime":1608626068198,"results":"35","hashOfConfig":"27"},{"size":751,"mtime":1608627999578,"results":"36","hashOfConfig":"27"},{"size":2641,"mtime":1608669738894,"results":"37","hashOfConfig":"27"},{"size":3530,"mtime":1608646238795,"results":"38","hashOfConfig":"27"},{"size":1013,"mtime":1608675259659,"results":"39","hashOfConfig":"27"},{"size":210,"mtime":1608674394733,"results":"40","hashOfConfig":"27"},{"size":1179,"mtime":1608674394772,"results":"41","hashOfConfig":"27"},{"size":2337,"mtime":1608671351717,"results":"42","hashOfConfig":"27"},{"size":1056,"mtime":1608550514193,"results":"43","hashOfConfig":"27"},{"size":354,"mtime":1608550437982,"results":"44","hashOfConfig":"27"},{"size":1180,"mtime":1608568382882,"results":"45","hashOfConfig":"27"},{"size":3022,"mtime":1608671351676,"results":"46","hashOfConfig":"27"},{"size":6626,"mtime":1608641510168,"results":"47","hashOfConfig":"27"},{"size":2446,"mtime":1608675219142,"results":"48","hashOfConfig":"27"},{"size":429,"mtime":1608673159878,"results":"49","hashOfConfig":"27"},{"size":1495,"mtime":1608674684180,"results":"50","hashOfConfig":"27"},{"size":4575,"mtime":1608677748864,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"v12i1m",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\index.js",[],["113","114"],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reportWebVitals.js",[],["115","116"],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\App.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\ProductScreen.js",["117"],"import React from 'react';\r\nimport data from \"../data\";\r\nimport {Link} from \"react-router-dom\";\r\nfunction ProductScreen(props) {\r\n    const product = data.products.find(x=> x._id == props.match.params.id);\r\n    return <div>\r\n        <div>\r\n            <Link to=\"/\">Back to home</Link>\r\n        </div>\r\n        <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"productimg\"/>\r\n            </div>\r\n            <div className=\"details-info\">\r\n                <ul>\r\n                    <li>\r\n                        <h4>{product.name}</h4>\r\n                    </li>\r\n                    <li>\r\n                        {product.brand}\r\n                    </li>\r\n                    <li>\r\n                        Price:<b>${product.price}</b>\r\n                    </li>\r\n                    <li>\r\n                        Description:\r\n                        <div className=\"details-description\">\r\n                            {product.description}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n               <ul>\r\n                   <li>\r\n                       Price: ${product.price}\r\n                   </li>\r\n                   <li>\r\n                       Status: ${product.status}\r\n                   </li>\r\n                   <li>\r\n                       Qty: <select name=\"\" id=\"\">\r\n                       <option value=\"\">1</option>\r\n                       <option value=\"\">2</option>\r\n                       <option value=\"\">3</option>\r\n                       <option value=\"\">4</option>\r\n                       <option value=\"\">5</option>\r\n                   </select>\r\n                   </li>\r\n                   <li>\r\n                       <button className=\"button\">\r\n                           Add to Cart\r\n                       </button>\r\n                   </li>\r\n               </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProductScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\store.js",["118"],"import {createStore, combineReducers, compose, applyMiddleware} from \"redux\";\r\nimport {\r\n    productDeleteReducer,\r\n    productDetailsReducer,\r\n    productListReducer,\r\n    productSaveReducer\r\n} from \"./reducers/productReducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {cartReducer} from \"./reducers/cartReducers\";\r\nimport Cookie from \"js-cookie\";\r\nimport {userRegisterReducer, userSigninReducer} from \"./reducers/userReducers\";\r\n\r\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\r\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n\r\nconst initialState = {cart: {cartItems, shipping: {}, payment: {}}, userSignin:{userInfo}};\r\nconst reducer =combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    productSave: productSaveReducer,\r\n    productDelete: productDeleteReducer,\r\n})\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            trace: true, traceLimit: 25\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n);\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState,  enhancer);\r\nexport default store;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\HomeScreen.js",["119"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {listProducts} from \"../actions/productActions\";\r\n\r\nfunction HomeScreen(props) {\r\n\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { products, loading, error} = productList;\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n        dispatch(listProducts());\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[])\r\n\r\n    return loading? <div>Loading...</div>:\r\n        error?<div>{error}</div> :\r\n\r\n    <ul className=\"products\">\r\n        {\r\n            products.map(product => (\r\n            <li key={product._id}>\r\n                <div className=\"product\">\r\n                    <Link to={'/product/' + product._id}>\r\n                        <img\r\n                            className=\"product-image\"\r\n                            src={process.env.PUBLIC_URL + '/images/' + product.image}\r\n                            alt=\"product\"\r\n                        />\r\n                    </Link>\r\n                    <div className=\"product-name\">\r\n                        <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                    </div>\r\n                    <div className=\"product-brand\">{product.brand}</div>\r\n                    <div className=\"product-price\">${product.price}</div>\r\n\r\n                </div>\r\n            </li>))}\r\n    </ul>\r\n}\r\nexport default HomeScreen;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductScreen.js",["120"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {detailsProduct} from \"../actions/productActions\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nfunction ProductScreen(props) {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const {product, loading, error} = productDetails;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n\r\n        dispatch(detailsProduct(props.match.params.id));\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[])\r\n\r\n\r\n    const handleAddtoCart = () =>{\r\n        props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <Link to=\"/\">Back to home</Link>\r\n        </div>\r\n        {loading ? <div>Loading...</div>:\r\n            error ? <div>{error}</div>: (<div className=\"details\">\r\n                <div className=\"details-image\">\r\n                    <img src={process.env.PUBLIC_URL + '/images/' + product.image} alt=\"productimg\"/>\r\n                </div>\r\n                <div className=\"details-info\">\r\n                    <ul>\r\n                        <li>\r\n                            <h4>{product.name}</h4>\r\n                        </li>\r\n                        <li>\r\n                            {product.brand}\r\n                        </li>\r\n                        <li>\r\n                            Price:<b>${product.price}</b>\r\n                        </li>\r\n                        <li>\r\n                            Description:\r\n                            <div className=\"details-description\">\r\n                                {product.description}\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"details-action\">\r\n                    <ul>\r\n                        <li>\r\n                            Price: ${product.price}\r\n                        </li>\r\n                        <li>\r\n                            Status: {\r\n                            product.countInStock > 0 ? \"In Stock\" :\r\n                                \"Out of stock\"\r\n                        }\r\n                        </li>\r\n                        <li>\r\n                            Qty: {\r\n                            product.countInStock > 0 && <select value={qty} onChange={(e) => {setQty(e.target.value)} }>\r\n                                {[...Array(product.countInStock).keys()].map(x =>\r\n                                    <option key={x+1} value={x+1}>{x+1}</option>)}\r\n                            </select>}\r\n                            {\r\n                                product.countInStock === 0 && \"0\"\r\n                            }\r\n                        </li>\r\n                        <li>\r\n                            {\r\n                                product.countInStock > 0 && <button onClick={handleAddtoCart} className=\"button primary\">Add to Cart</button>\r\n                            }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n}\r\nexport default ProductScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\productActions.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\CartScreen.js",["121"],"import React, { useEffect } from 'react';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nfunction CartScreen(props) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () =>{\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ?\r\n                        <div>\r\n                            Cart is empty\r\n                        </div>\r\n                        :\r\n                        cartItems.map(item =>\r\n                            <li>\r\n                                <div className=\"cart-image\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/' + item.image} alt=\"productimg\"/>\r\n                                </div>\r\n                                <div className=\"cart-name\">\r\n                                    <div>\r\n                                        <Link to={\"/product/\" + item.product}>\r\n                                            {item.name}\r\n                                        </Link>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        Qty:\r\n                                        <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x =>\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <button className=\"button\" type=\"button\" onClick={() => removeFromCartHandler(item.product)}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"cart-price\">\r\n                                    ${item.price}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                :\r\n                $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\cartActions.js",["122"],"import axios from \"axios\";\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING} from \"../constants/cartConstants\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({type: CART_ADD_ITEM, payload:{\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n        const {cart: {cartItems}} = getState();\r\n        Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nconst removeFromCart = (productId) => (dispatch, getState) =>{\r\n    dispatch({type: CART_REMOVE_ITEM, payload: productId})\r\n}\r\n\r\nconst saveShipping = (data) => (dispatch) => {\r\n    dispatch({type: CART_SAVE_SHIPPING, payload: data})\r\n}\r\n\r\nconst savePayment = (data) => (dispatch) => {\r\n    dispatch({type: CART_SAVE_PAYMENT, payload: data})\r\n}\r\n\r\nexport {addToCart, removeFromCart, saveShipping, savePayment};","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\SigninScreen.js",["123"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {signin} from \"../actions/userActions\";\r\n\r\n\r\n\r\n\r\nfunction SigninScreen(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, userInfo, error} = userSignin;\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() =>{\r\n\r\n        if (userInfo){\r\n            props.history.push(redirect);\r\n        }\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password));\r\n    }\r\n\r\n\r\n    return <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                   <h2>Sign-in</h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                    {error && <div>{error}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(event) => setEmail(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(event) => setPassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <button type=\"submit\" className=\"button primary\">Sign In</button>\r\n                </li>\r\n                <li>\r\n                    Not a member yet?\r\n                </li>\r\n                <li>\r\n                    <Link to={redirect === \"/\" ? \"register\" : \"register?redirect=\" + redirect} className=\"button secondary text-center\">Create your account!</Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n}\r\nexport default SigninScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\userActions.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\RegisterScreen.js",["124","125"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {register} from \"../actions/userActions\";\r\n\r\n\r\n\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rePassword, setRePassword] = useState('');\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {loading, userInfo, error} = userRegister;\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() =>{\r\n\r\n        if (userInfo){\r\n            props.history.push(redirect);\r\n        }\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register(name, email, password));\r\n    }\r\n\r\n\r\n    return <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                    <h2>Create Account</h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                    {error && <div>{error}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"name\">\r\n                        Name\r\n                    </label>\r\n                    <input type=\"name\" name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(event) => setEmail(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(event) => setPassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"rePassword\">\r\n                        Re-enter Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"rePassword\" id=\"rePassword\" onChange={(event) => setRePassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <button type=\"submit\" className=\"button primary\">Register</button>\r\n                </li>\r\n                <li>\r\n                    Already have an account?\r\n                </li>\r\n                <li>\r\n                    <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button secondary text-center\">Sign in!</Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n}\r\nexport default RegisterScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductsScreen.js",["126","127","128","129","130"],"import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {deleteProduct, listProducts, saveProduct} from \"../actions/productActions\";\r\n\r\n\r\n\r\n\r\nfunction ProductsScreen(props) {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productSave = useSelector(state => state.productSave);\r\n    const {loading: loadingSave, success: successSave, error: errorSave} = productSave;\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const {loading: loadingDelete, success: successDelete, error: errorDelete} = productDelete;\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading, products, error} = productList;\r\n\r\n    useEffect(() =>{\r\n        if(successSave){\r\n            setModalVisible(false);\r\n        }\r\n        dispatch(listProducts());\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[successSave, successDelete]);\r\n\r\n    const openModal = (product) =>{\r\n        setModalVisible(true);\r\n        setId(product._id);\r\n        setName(product.name);\r\n        setImage(product.image);\r\n        setPrice(product.price);\r\n        setCategory(product.category);\r\n        setBrand(product.brand);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveProduct({\r\n            _id: id,\r\n            name, image, price, category, brand,\r\n            countInStock, description}));\r\n    }\r\n\r\n    const deleteHandler = (product) => {\r\n        dispatch(deleteProduct(product._id));\r\n    }\r\n\r\n\r\n    return <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n            <h3>Products</h3>\r\n            <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\r\n        </div>\r\n        {modalVisible && <div className=\"form\">\r\n            <form onSubmit={submitHandler}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h2>Create Product</h2>\r\n                    </li>\r\n                    <li>\r\n                        {loadingSave && <div>Loading...</div>}\r\n                        {errorSave && <div>{errorSave}</div>}\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"name\">\r\n                            Name\r\n                        </label>\r\n                        <input type=\"text\" value={name} name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"name\">\r\n                            Image\r\n                        </label>\r\n                        <input type=\"text\" value={image} name=\"image\" id=\"image\" onChange={(event) => setImage(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"price\">\r\n                            Price\r\n                        </label>\r\n                        <input type=\"text\" value={price} name=\"price\" id=\"price\" onChange={(event) => setPrice(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"category\">\r\n                            Category\r\n                        </label>\r\n                        <input type=\"text\" value={category} name=\"category\" id=\"category\" onChange={(event) => setCategory(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"brand\">\r\n                            Brand\r\n                        </label>\r\n                        <input type=\"text\" value={brand} name=\"brand\" id=\"brand\" onChange={(event) => setBrand(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"countInStock\">\r\n                            Count in Stock\r\n                        </label>\r\n                        <input type=\"text\" value={countInStock} name=\"countInStock\" id=\"countInStock\" onChange={(event) => setCountInStock(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"description\">\r\n                            Description\r\n                        </label>\r\n                        <textarea name=\"description\" value={description} id=\"description\" onChange={(event) => setDescription(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\r\n                    </li>\r\n                    <button className=\"button secondary\" onClick={() => setModalVisible(false)}>Back</button>\r\n                </ul>\r\n            </form>\r\n        </div>}\r\n\r\n\r\n        <div className=\"product-list\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Category</th>\r\n                        <th>Brand</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    products.map(product => (<tr key={product._id}>\r\n                        <td>{product._id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.brand}</td>\r\n                        <td>\r\n                            <button className=\"button\" onClick={() => openModal(product)}>Edit</button>\r\n                            {' '}\r\n                            <button className=\"button\" onClick={() => deleteHandler(product)}>Delete</button>\r\n                        </td>\r\n                    </tr>))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n}\r\nexport default ProductsScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":5,"column":50,"nodeType":"142","messageId":"143","endLine":5,"endColumn":52},{"ruleId":"144","severity":1,"message":"145","line":39,"column":7,"nodeType":"146","messageId":"147","endLine":39,"endColumn":22},{"ruleId":"148","severity":1,"message":"149","line":19,"column":7,"nodeType":"150","endLine":19,"endColumn":9,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":21,"column":7,"nodeType":"150","endLine":21,"endColumn":9,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":22,"column":8,"nodeType":"150","endLine":22,"endColumn":10,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"156","line":34,"column":7,"nodeType":"146","messageId":"147","endLine":34,"endColumn":18},{"ruleId":"148","severity":1,"message":"157","line":29,"column":7,"nodeType":"150","endLine":29,"endColumn":17,"suggestions":"158"},{"ruleId":"144","severity":1,"message":"159","line":16,"column":12,"nodeType":"146","messageId":"147","endLine":16,"endColumn":22},{"ruleId":"148","severity":1,"message":"157","line":31,"column":7,"nodeType":"150","endLine":31,"endColumn":17,"suggestions":"160"},{"ruleId":"144","severity":1,"message":"161","line":24,"column":21,"nodeType":"146","messageId":"147","endLine":24,"endColumn":34},{"ruleId":"144","severity":1,"message":"162","line":24,"column":67,"nodeType":"146","messageId":"147","endLine":24,"endColumn":78},{"ruleId":"144","severity":1,"message":"163","line":27,"column":12,"nodeType":"146","messageId":"147","endLine":27,"endColumn":19},{"ruleId":"144","severity":1,"message":"164","line":27,"column":31,"nodeType":"146","messageId":"147","endLine":27,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":38,"column":7,"nodeType":"150","endLine":38,"endColumn":35,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"166","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"167","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":35},{"ruleId":"144","severity":1,"message":"168","line":22,"column":11,"nodeType":"146","messageId":"147","endLine":22,"endColumn":19},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'composeEnhancer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["173"],"'savePayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["174"],"'rePassword' is assigned a value but never used.",["175"],"'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["176"],"'addToCart' is defined but never used.","'removeFromCart' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"192","text":"193"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"194","text":"195"},{"range":"196","text":"195"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"197","text":"198"},[523,525],"[dispatch]",[631,633],"[dispatch, props.match.params.id]",[729,731],"[dispatch, productId, qty]",[781,791],"[props.history, redirect, userInfo]",[889,899],[1395,1423],"[successSave, successDelete, dispatch]"]