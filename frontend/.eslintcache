[{"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\index.js":"1","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reportWebVitals.js":"2","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\App.js":"3","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\HomeScreen.js":"4","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\ProductScreen.js":"5","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\store.js":"6","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\productReducers.js":"7","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\productConstants.js":"10","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\productActions.js":"11","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\CartScreen.js":"12","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\cartReducers.js":"13","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\cartConstants.js":"14","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\cartActions.js":"15","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\SigninScreen.js":"16","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\userReducers.js":"17","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\userConstants.js":"18","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\userActions.js":"19","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\RegisterScreen.js":"20","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductsScreen.js":"21"},{"size":283,"mtime":1608467306747,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2492,"mtime":1608622434537,"results":"25","hashOfConfig":"23"},{"size":1501,"mtime":1608415432278,"results":"26","hashOfConfig":"23"},{"size":2056,"mtime":1608412242853,"results":"27","hashOfConfig":"23"},{"size":1417,"mtime":1608627323117,"results":"28","hashOfConfig":"23"},{"size":2158,"mtime":1608639514144,"results":"29","hashOfConfig":"23"},{"size":1504,"mtime":1608615766943,"results":"30","hashOfConfig":"23"},{"size":3253,"mtime":1608626068198,"results":"31","hashOfConfig":"23"},{"size":751,"mtime":1608627999578,"results":"32","hashOfConfig":"23"},{"size":2637,"mtime":1608639189028,"results":"33","hashOfConfig":"23"},{"size":3530,"mtime":1608646238795,"results":"34","hashOfConfig":"23"},{"size":724,"mtime":1608483505129,"results":"35","hashOfConfig":"23"},{"size":98,"mtime":1608483505100,"results":"36","hashOfConfig":"23"},{"size":895,"mtime":1608484218803,"results":"37","hashOfConfig":"23"},{"size":2189,"mtime":1608549340433,"results":"38","hashOfConfig":"23"},{"size":1056,"mtime":1608550514193,"results":"39","hashOfConfig":"23"},{"size":354,"mtime":1608550437982,"results":"40","hashOfConfig":"23"},{"size":1180,"mtime":1608568382882,"results":"41","hashOfConfig":"23"},{"size":2876,"mtime":1608569711730,"results":"42","hashOfConfig":"23"},{"size":6626,"mtime":1608641510168,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"v12i1m",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\index.js",[],["97","98"],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reportWebVitals.js",[],["99","100"],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\App.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\Screens\\ProductScreen.js",["101"],"import React from 'react';\r\nimport data from \"../data\";\r\nimport {Link} from \"react-router-dom\";\r\nfunction ProductScreen(props) {\r\n    const product = data.products.find(x=> x._id == props.match.params.id);\r\n    return <div>\r\n        <div>\r\n            <Link to=\"/\">Back to home</Link>\r\n        </div>\r\n        <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"productimg\"/>\r\n            </div>\r\n            <div className=\"details-info\">\r\n                <ul>\r\n                    <li>\r\n                        <h4>{product.name}</h4>\r\n                    </li>\r\n                    <li>\r\n                        {product.brand}\r\n                    </li>\r\n                    <li>\r\n                        Price:<b>${product.price}</b>\r\n                    </li>\r\n                    <li>\r\n                        Description:\r\n                        <div className=\"details-description\">\r\n                            {product.description}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n               <ul>\r\n                   <li>\r\n                       Price: ${product.price}\r\n                   </li>\r\n                   <li>\r\n                       Status: ${product.status}\r\n                   </li>\r\n                   <li>\r\n                       Qty: <select name=\"\" id=\"\">\r\n                       <option value=\"\">1</option>\r\n                       <option value=\"\">2</option>\r\n                       <option value=\"\">3</option>\r\n                       <option value=\"\">4</option>\r\n                       <option value=\"\">5</option>\r\n                   </select>\r\n                   </li>\r\n                   <li>\r\n                       <button className=\"button\">\r\n                           Add to Cart\r\n                       </button>\r\n                   </li>\r\n               </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProductScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\store.js",["102"],"import {createStore, combineReducers, compose, applyMiddleware} from \"redux\";\r\nimport {productDetailsReducer, productListReducer, productSaveReducer} from \"./reducers/productReducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {cartReducer} from \"./reducers/cartReducers\";\r\nimport Cookie from \"js-cookie\";\r\nimport {userRegisterReducer, userSigninReducer} from \"./reducers/userReducers\";\r\n\r\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\r\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n\r\nconst initialState = {cart: {cartItems}, userSignin:{userInfo}};\r\nconst reducer =combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    productSave: productSaveReducer\r\n})\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            trace: true, traceLimit: 25\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n);\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState,  enhancer);\r\nexport default store;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\HomeScreen.js",["103"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {listProducts} from \"../actions/productActions\";\r\n\r\nfunction HomeScreen(props) {\r\n\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { products, loading, error} = productList;\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n        dispatch(listProducts());\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[])\r\n\r\n    return loading? <div>Loading...</div>:\r\n        error?<div>{error}</div> :\r\n\r\n    <ul className=\"products\">\r\n        {\r\n            products.map(product => (\r\n            <li key={product._id}>\r\n                <div className=\"product\">\r\n                    <Link to={'/product/' + product._id}>\r\n                        <img\r\n                            className=\"product-image\"\r\n                            src={process.env.PUBLIC_URL + '/images/' + product.image}\r\n                            alt=\"product\"\r\n                        />\r\n                    </Link>\r\n                    <div className=\"product-name\">\r\n                        <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                    </div>\r\n                    <div className=\"product-brand\">{product.brand}</div>\r\n                    <div className=\"product-price\">${product.price}</div>\r\n\r\n                </div>\r\n            </li>))}\r\n    </ul>\r\n}\r\nexport default HomeScreen;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductScreen.js",["104"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {detailsProduct} from \"../actions/productActions\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nfunction ProductScreen(props) {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const {product, loading, error} = productDetails;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n\r\n        dispatch(detailsProduct(props.match.params.id));\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[])\r\n\r\n\r\n    const handleAddtoCart = () =>{\r\n        props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            <Link to=\"/\">Back to home</Link>\r\n        </div>\r\n        {loading ? <div>Loading...</div>:\r\n            error ? <div>{error}</div>: (<div className=\"details\">\r\n                <div className=\"details-image\">\r\n                    <img src={process.env.PUBLIC_URL + '/images/' + product.image} alt=\"productimg\"/>\r\n                </div>\r\n                <div className=\"details-info\">\r\n                    <ul>\r\n                        <li>\r\n                            <h4>{product.name}</h4>\r\n                        </li>\r\n                        <li>\r\n                            {product.brand}\r\n                        </li>\r\n                        <li>\r\n                            Price:<b>${product.price}</b>\r\n                        </li>\r\n                        <li>\r\n                            Description:\r\n                            <div className=\"details-description\">\r\n                                {product.description}\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"details-action\">\r\n                    <ul>\r\n                        <li>\r\n                            Price: ${product.price}\r\n                        </li>\r\n                        <li>\r\n                            Status: {\r\n                            product.countInStock > 0 ? \"In Stock\" :\r\n                                \"Out of stock\"\r\n                        }\r\n                        </li>\r\n                        <li>\r\n                            Qty: {\r\n                            product.countInStock > 0 && <select value={qty} onChange={(e) => {setQty(e.target.value)} }>\r\n                                {[...Array(product.countInStock).keys()].map(x =>\r\n                                    <option key={x+1} value={x+1}>{x+1}</option>)}\r\n                            </select>}\r\n                            {\r\n                                product.countInStock === 0 && \"0\"\r\n                            }\r\n                        </li>\r\n                        <li>\r\n                            {\r\n                                product.countInStock > 0 && <button onClick={handleAddtoCart} className=\"button primary\">Add to Cart</button>\r\n                            }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n}\r\nexport default ProductScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\productActions.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\CartScreen.js",["105"],"import React, { useEffect } from 'react';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nfunction CartScreen(props) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () =>{\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ?\r\n                        <div>\r\n                            Cart is empty\r\n                        </div>\r\n                        :\r\n                        cartItems.map(item =>\r\n                            <li>\r\n                                <div className=\"cart-image\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/' + item.image} alt=\"productimg\"/>\r\n                                </div>\r\n                                <div className=\"cart-name\">\r\n                                    <div>\r\n                                        <Link to={\"/product/\" + item.product}>\r\n                                            {item.name}\r\n                                        </Link>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        Qty:\r\n                                        <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x =>\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <button className=\"button\" type=\"button\" onClick={() => removeFromCartHandler(item.product)}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"cart-price\">\r\n                                    ${item.price}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                :\r\n                $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\cartActions.js",[],["106","107"],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\SigninScreen.js",["108"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {signin} from \"../actions/userActions\";\r\n\r\n\r\n\r\n\r\nfunction SigninScreen(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, userInfo, error} = userSignin;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n\r\n        if (userInfo){\r\n            props.history.push(\"/\");\r\n        }\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password));\r\n    }\r\n\r\n\r\n    return <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                   <h2>Sign-in</h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                    {error && <div>{error}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(event) => setEmail(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(event) => setPassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <button type=\"submit\" className=\"button primary\">Sign In</button>\r\n                </li>\r\n                <li>\r\n                    Not a member yet?\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/register\" className=\"button secondary text-center\">Create your account!</Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n}\r\nexport default SigninScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\actions\\userActions.js",[],"C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\RegisterScreen.js",["109","110"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {register} from \"../actions/userActions\";\r\n\r\n\r\n\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rePassword, setRePassword] = useState('');\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {loading, userInfo, error} = userRegister;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n\r\n        if (userInfo){\r\n            props.history.push(\"/\");\r\n        }\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register(name, email, password));\r\n    }\r\n\r\n\r\n    return <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                    <h2>Create Account</h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                    {error && <div>{error}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"name\">\r\n                        Name\r\n                    </label>\r\n                    <input type=\"name\" name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"email\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(event) => setEmail(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"password\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(event) => setPassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"rePassword\">\r\n                        Re-enter Password\r\n                    </label>\r\n                    <input type=\"password\" name=\"rePassword\" id=\"rePassword\" onChange={(event) => setRePassword(event.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <button type=\"submit\" className=\"button primary\">Register</button>\r\n                </li>\r\n                <li>\r\n                    Already have an account?\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/signin\" className=\"button secondary text-center\">Sign in!</Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n}\r\nexport default RegisterScreen;\r\n\r\n","C:\\xampp_1\\htdocs\\reactshop\\frontend\\src\\screens\\ProductsScreen.js",["111","112","113","114","115"],"import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {deleteProduct, listProducts, saveProduct} from \"../actions/productActions\";\r\n\r\n\r\n\r\n\r\nfunction ProductsScreen(props) {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productSave = useSelector(state => state.productSave);\r\n    const {loading: loadingSave, success: successSave, error: errorSave} = productSave;\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const {loading: loadingDelete, success: successDelete, error: errorDelete} = productDelete;\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading, products, error} = productList;\r\n\r\n    useEffect(() =>{\r\n        if(successSave){\r\n            setModalVisible(false);\r\n        }\r\n        dispatch(listProducts());\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[successSave, successDelete]);\r\n\r\n    const openModal = (product) =>{\r\n        setModalVisible(true);\r\n        setId(product._id);\r\n        setName(product.name);\r\n        setImage(product.image);\r\n        setPrice(product.price);\r\n        setCategory(product.category);\r\n        setBrand(product.brand);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveProduct({\r\n            _id: id,\r\n            name, image, price, category, brand,\r\n            countInStock, description}));\r\n    }\r\n\r\n    const deleteHandler = (product) => {\r\n        dispatch(deleteProduct(product._id));\r\n    }\r\n\r\n\r\n    return <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n            <h3>Products</h3>\r\n            <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\r\n        </div>\r\n        {modalVisible && <div className=\"form\">\r\n            <form onSubmit={submitHandler}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h2>Create Product</h2>\r\n                    </li>\r\n                    <li>\r\n                        {loadingSave && <div>Loading...</div>}\r\n                        {errorSave && <div>{errorSave}</div>}\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"name\">\r\n                            Name\r\n                        </label>\r\n                        <input type=\"text\" value={name} name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"name\">\r\n                            Image\r\n                        </label>\r\n                        <input type=\"text\" value={image} name=\"image\" id=\"image\" onChange={(event) => setImage(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"price\">\r\n                            Price\r\n                        </label>\r\n                        <input type=\"text\" value={price} name=\"price\" id=\"price\" onChange={(event) => setPrice(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"category\">\r\n                            Category\r\n                        </label>\r\n                        <input type=\"text\" value={category} name=\"category\" id=\"category\" onChange={(event) => setCategory(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"brand\">\r\n                            Brand\r\n                        </label>\r\n                        <input type=\"text\" value={brand} name=\"brand\" id=\"brand\" onChange={(event) => setBrand(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"countInStock\">\r\n                            Count in Stock\r\n                        </label>\r\n                        <input type=\"text\" value={countInStock} name=\"countInStock\" id=\"countInStock\" onChange={(event) => setCountInStock(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"description\">\r\n                            Description\r\n                        </label>\r\n                        <textarea name=\"description\" value={description} id=\"description\" onChange={(event) => setDescription(event.target.value)}/>\r\n                    </li>\r\n                    <li>\r\n                        <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\r\n                    </li>\r\n                    <button className=\"button secondary\" onClick={() => setModalVisible(false)}>Back</button>\r\n                </ul>\r\n            </form>\r\n        </div>}\r\n\r\n\r\n        <div className=\"product-list\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Category</th>\r\n                        <th>Brand</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    products.map(product => (<tr key={product._id}>\r\n                        <td>{product._id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.brand}</td>\r\n                        <td>\r\n                            <button className=\"button\" onClick={() => openModal(product)}>Edit</button>\r\n                            {' '}\r\n                            <button className=\"button\" onClick={() => deleteHandler(product)}>Delete</button>\r\n                        </td>\r\n                    </tr>))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n}\r\nexport default ProductsScreen;\r\n\r\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":5,"column":50,"nodeType":"124","messageId":"125","endLine":5,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":33,"column":7,"nodeType":"128","messageId":"129","endLine":33,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":19,"column":7,"nodeType":"132","endLine":19,"endColumn":9,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":21,"column":7,"nodeType":"132","endLine":21,"endColumn":9,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":22,"column":8,"nodeType":"132","endLine":22,"endColumn":10,"suggestions":"137"},{"ruleId":"116","replacedBy":"138"},{"ruleId":"118","replacedBy":"139"},{"ruleId":"130","severity":1,"message":"140","line":28,"column":7,"nodeType":"132","endLine":28,"endColumn":17,"suggestions":"141"},{"ruleId":"126","severity":1,"message":"142","line":16,"column":12,"nodeType":"128","messageId":"129","endLine":16,"endColumn":22},{"ruleId":"130","severity":1,"message":"140","line":30,"column":7,"nodeType":"132","endLine":30,"endColumn":17,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":24,"column":21,"nodeType":"128","messageId":"129","endLine":24,"endColumn":34},{"ruleId":"126","severity":1,"message":"145","line":24,"column":67,"nodeType":"128","messageId":"129","endLine":24,"endColumn":78},{"ruleId":"126","severity":1,"message":"146","line":27,"column":12,"nodeType":"128","messageId":"129","endLine":27,"endColumn":19},{"ruleId":"126","severity":1,"message":"147","line":27,"column":31,"nodeType":"128","messageId":"129","endLine":27,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":38,"column":7,"nodeType":"132","endLine":38,"endColumn":35,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],["149"],["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'composeEnhancer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["153"],["149"],["150"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["154"],"'rePassword' is assigned a value but never used.",["155"],"'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"170","text":"171"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"172","text":"173"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"174","text":"175"},{"range":"176","text":"175"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"177","text":"178"},[523,525],"[dispatch]",[631,633],"[dispatch, props.match.params.id]",[729,731],"[dispatch, productId, qty]",[687,697],"[props.history, userInfo]",[795,805],[1395,1423],"[successSave, successDelete, dispatch]"]