{"ast":null,"code":"import _toConsumableArray from\"C:/xampp_1/htdocs/reactshop/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{CART_ADD_ITEM,CART_REMOVE_ITEM}from\"../constants/cartConstants\";function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{cartItems:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CART_ADD_ITEM:var item=action.payload;var product=state.cartItems.find(function(x){return x.product===item.product;});if(product){return{cartItems:state.cartItems.map(function(x){return x.product===product.product?item:x;})};}return{cartItems:[].concat(_toConsumableArray(state.cartItems),[item])};case CART_REMOVE_ITEM:return{cartItems:state.cartItems.filter(function(x){return x.product!==action.payload;})};default:return state;}}export{cartReducer};","map":{"version":3,"sources":["C:/xampp_1/htdocs/reactshop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","filter"],"mappings":"+HAAA,OAAQA,aAAR,CAAuBC,gBAAvB,KAA8C,4BAA9C,CAEA,QAASC,CAAAA,WAAT,EAAsD,IAAjCC,CAAAA,KAAiC,2DAAzB,CAACC,SAAS,CAAE,EAAZ,CAAyB,IAARC,CAAAA,MAAQ,2CAElD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,aAAL,CACI,GAAMO,CAAAA,IAAI,CAAGF,MAAM,CAACG,OAApB,CACA,GAAMC,CAAAA,OAAO,CAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,OAAF,GAAcF,IAAI,CAACE,OAAvB,EAAtB,CAAhB,CACA,GAAIA,OAAJ,CAAY,CACT,MAAO,CAACL,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoB,SAAAD,CAAC,QAAIA,CAAAA,CAAC,CAACF,OAAF,GAAcA,OAAO,CAACA,OAAtB,CAA8BF,IAA9B,CAAoCI,CAAxC,EAArB,CAAZ,CAAP,CACF,CACD,MAAO,CAACP,SAAS,8BAAMD,KAAK,CAACC,SAAZ,GAAuBG,IAAvB,EAAV,CAAP,CACJ,IAAKN,CAAAA,gBAAL,CACI,MAAO,CAACG,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAuB,SAAAF,CAAC,QAAIA,CAAAA,CAAC,CAACF,OAAF,GAAcJ,MAAM,CAACG,OAAzB,EAAxB,CAAZ,CAAP,CACJ,QACI,MAAOL,CAAAA,KAAP,CAXR,CAaH,CAED,OAAQD,WAAR","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from \"../constants/cartConstants\";\r\n\r\nfunction cartReducer(state = {cartItems: []}, action) {\r\n\r\n    switch (action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const product = state.cartItems.find(x => x.product === item.product);\r\n            if (product){\r\n               return {cartItems: state.cartItems.map(x => x.product === product.product?item: x)};\r\n            }\r\n            return {cartItems: [...state.cartItems, item]};\r\n        case CART_REMOVE_ITEM:\r\n            return {cartItems: state.cartItems.filter(x => x.product !== action.payload)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {cartReducer}"]},"metadata":{},"sourceType":"module"}