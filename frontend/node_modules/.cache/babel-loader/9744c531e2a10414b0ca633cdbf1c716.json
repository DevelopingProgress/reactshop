{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp_1\\\\htdocs\\\\reactshop\\\\frontend\\\\src\\\\screens\\\\ProductsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { listProducts, saveProduct } from \"../actions/productActions\";\n\nfunction ProductsScreen(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [brand, setBrand] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  useEffect(() => {\n    dispatch(listProducts());\n    return () => {//\n    };\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      name,\n      image,\n      price,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content content-margined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this); // <div className=\"form\">\n  //     <form onSubmit={submitHandler}>\n  //         <ul className=\"form-container\">\n  //             <li>\n  //                <h2>Create Product</h2>\n  //             </li>\n  //             <li>\n  //                 {loadingSave && <div>Loading...</div>}\n  //                 {errorSave && <div>{errorSave}</div>}\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"name\">\n  //                     Name\n  //                 </label>\n  //                 <input type=\"text\" name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"name\">\n  //                     Image\n  //                 </label>\n  //                 <input type=\"text\" name=\"image\" id=\"image\" onChange={(event) => setImage(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"price\">\n  //                     Price\n  //                 </label>\n  //                 <input type=\"text\" name=\"price\" id=\"price\" onChange={(event) => setPrice(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"category\">\n  //                     Category\n  //                 </label>\n  //                 <input type=\"text\" name=\"category\" id=\"category\" onChange={(event) => setCategory(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"brand\">\n  //                     Brand\n  //                 </label>\n  //                 <input type=\"text\" name=\"brand\" id=\"brand\" onChange={(event) => setBrand(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"countInStock\">\n  //                     Count in Stock\n  //                 </label>\n  //                 <input type=\"text\" name=\"countInStock\" id=\"countInStock\" onChange={(event) => setCountInStock(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <label htmlFor=\"description\">\n  //                     Description\n  //                 </label>\n  //                 <textarea name=\"description\" id=\"description\" onChange={(event) => setDescription(event.target.value)}/>\n  //             </li>\n  //             <li>\n  //                 <button type=\"submit\" className=\"button primary\">Create</button>\n  //             </li>\n  //         </ul>\n  //     </form>\n  // </div>\n}\n\n_s(ProductsScreen, \"dO7/uWHDwps35MGaiOdtdLnGYo4=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ProductsScreen;\nexport default ProductsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"sources":["C:/xampp_1/htdocs/reactshop/frontend/src/screens/ProductsScreen.js"],"names":["React","useDispatch","useSelector","useEffect","useState","listProducts","saveProduct","ProductsScreen","props","name","setName","image","setImage","price","setPrice","category","setCategory","brand","setBrand","countInStock","setCountInStock","description","setDescription","productSave","state","loading","loadingSave","success","successSave","error","errorSave","dispatch","productList","products","submitHandler","e","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,2BAAxC;;AAKA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMmB,WAAW,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAO,EAAEC,WAAV;AAAuBC,IAAAA,OAAO,EAAEC,WAAhC;AAA6CC,IAAAA,KAAK,EAAEC;AAApD,MAAiEP,WAAvE;AACA,QAAMQ,QAAQ,GAAG9B,WAAW,EAA5B;AACA,QAAM+B,WAAW,GAAG9B,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACQ,WAAhB,CAA/B;AACA,QAAM;AAACP,IAAAA,OAAD;AAAUQ,IAAAA,QAAV;AAAoBJ,IAAAA;AAApB,MAA6BG,WAAnC;AAEA7B,EAAAA,SAAS,CAAC,MAAK;AAEX4B,IAAAA,QAAQ,CAAC1B,YAAY,EAAb,CAAR;AAEA,WAAO,MAAK,CACR;AACH,KAFD;AAGH,GAPQ,EAOP,EAPO,CAAT;;AASA,QAAM6B,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACzB,WAAW,CAAC;AAACG,MAAAA,IAAD;AAAOE,MAAAA,KAAP;AAAcE,MAAAA,KAAd;AAAqBE,MAAAA,QAArB;AAA+BE,MAAAA,KAA/B;AACjBE,MAAAA,YADiB;AACHE,MAAAA;AADG,KAAD,CAAZ,CAAR;AAEH,GAJD;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP,CA/B2B,CAoC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;GA9FQd,c;UASeL,W,EAEHD,W,EACGC,W;;;KAZfK,c;AA+FT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {listProducts, saveProduct} from \"../actions/productActions\";\r\n\r\n\r\n\r\n\r\nfunction ProductsScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productSave = useSelector(state => state.productSave);\r\n    const {loading: loadingSave, success: successSave, error: errorSave} = productSave;\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading, products, error} = productList;\r\n\r\n    useEffect(() =>{\r\n\r\n        dispatch(listProducts());\r\n\r\n        return () =>{\r\n            //\r\n        };\r\n    },[]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveProduct({name, image, price, category, brand,\r\n            countInStock, description}));\r\n    }\r\n\r\n\r\n    return <div className=\"content content-margined\">\r\n    \r\n    </div>\r\n\r\n\r\n    // <div className=\"form\">\r\n    //     <form onSubmit={submitHandler}>\r\n    //         <ul className=\"form-container\">\r\n    //             <li>\r\n    //                <h2>Create Product</h2>\r\n    //             </li>\r\n    //             <li>\r\n    //                 {loadingSave && <div>Loading...</div>}\r\n    //                 {errorSave && <div>{errorSave}</div>}\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"name\">\r\n    //                     Name\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"name\" id=\"name\" onChange={(event) => setName(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"name\">\r\n    //                     Image\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"image\" id=\"image\" onChange={(event) => setImage(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"price\">\r\n    //                     Price\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"price\" id=\"price\" onChange={(event) => setPrice(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"category\">\r\n    //                     Category\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"category\" id=\"category\" onChange={(event) => setCategory(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"brand\">\r\n    //                     Brand\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"brand\" id=\"brand\" onChange={(event) => setBrand(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"countInStock\">\r\n    //                     Count in Stock\r\n    //                 </label>\r\n    //                 <input type=\"text\" name=\"countInStock\" id=\"countInStock\" onChange={(event) => setCountInStock(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <label htmlFor=\"description\">\r\n    //                     Description\r\n    //                 </label>\r\n    //                 <textarea name=\"description\" id=\"description\" onChange={(event) => setDescription(event.target.value)}/>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <button type=\"submit\" className=\"button primary\">Create</button>\r\n    //             </li>\r\n    //         </ul>\r\n    //     </form>\r\n    // </div>\r\n}\r\nexport default ProductsScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}