{"ast":null,"code":"import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: e.message\n    });\n  }\n};\n\nconst saveProduct = product = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState;\n    const {\n      data\n    } = await axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: e.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: e.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/xampp_1/htdocs/reactshop/frontend/src/actions/productActions.js"],"names":["PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","axios","listProducts","dispatch","type","data","get","payload","e","message","saveProduct","product","getState","userSignin","userInfo","post","headers","token","detailsProduct","productId"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,uBAFJ,EAE6BC,uBAF7B,EAGIC,iBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAK0BC,iBAL1B,EAK6CC,oBAL7C,EAKmEC,oBALnE,QAMO,+BANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACA,UAAM;AAACS,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,oBAAP;AAA6BU,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAJD,CAIC,OAAOG,CAAP,EAAU;AACPL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,iBAAP;AAA0BY,MAAAA,OAAO,EAAEC,CAAC,CAACC;AAArC,KAAD,CAAR;AACH;AACJ,CARD;;AAUA,MAAMC,WAAW,GAAIC,OAAD,GAAY,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC1D,MAAI;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BQ,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAACE,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AAAb,QAA2BF,QAAjC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqC;AACtDK,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWF,QAAQ,CAACG;AADhC;AAD6C,KAArC,CAArB;AAKAd,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,oBAAP;AAA6BO,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GATD,CASE,OAAOG,CAAP,EAAU;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,iBAAP;AAA0BS,MAAAA,OAAO,EAAEC,CAAC,CAACC;AAArC,KAAD,CAAR;AACH;AACJ,CAbD;;AAgBA,MAAMS,cAAc,GAAIC,SAAD,IAAe,MAAOhB,QAAP,IAAoB;AACtD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX,uBAAP;AAAgCc,MAAAA,OAAO,EAAEY;AAAzC,KAAD,CAAR;AACA,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAmBa,SAA7B,CAArB;AACAhB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,uBAAP;AAAgCa,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAIE,OAAOG,CAAP,EAAU;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ,oBAAP;AAA6Be,MAAAA,OAAO,EAAEC,CAAC,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CARD;;AAWA,SAAQP,YAAR,EAAsBgB,cAAtB,EAAsCR,WAAtC","sourcesContent":["import {\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }catch (e) {\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: e.message});\r\n    }\r\n}\r\n\r\nconst saveProduct = (product) = async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin: {userInfo}} = getState;\r\n        const {data} = await axios.post('/api/products', product, {\r\n            headers: {\r\n                'Authorization': 'Bearer' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n    } catch (e) {\r\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: e.message});\r\n    }\r\n}\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    } catch (e) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: e.message});\r\n    }\r\n}\r\n\r\n\r\nexport {listProducts, detailsProduct, saveProduct}\r\n"]},"metadata":{},"sourceType":"module"}