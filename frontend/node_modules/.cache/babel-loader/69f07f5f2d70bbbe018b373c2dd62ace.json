{"ast":null,"code":"import _toConsumableArray from\"C:/xampp_1/htdocs/reactshop/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{addToCart,removeFromCart}from'../actions/cartActions';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';function CartScreen(props){var cart=useSelector(function(state){return state.cart;});var cartItems=cart.cartItems;var productId=props.match.params.id;var qty=props.location.search?Number(props.location.search.split(\"=\")[1]):1;var dispatch=useDispatch();var removeFromCartHandler=function removeFromCartHandler(productId){dispatch(removeFromCart(productId));};useEffect(function(){if(productId){dispatch(addToCart(productId,qty));}},[]);var checkoutHandler=function checkoutHandler(){props.history.push(\"/signin?redirect=shipping\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"cart\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-list\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"cart-list-container\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Shopping Cart\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Price\"})]}),cartItems.length===0?/*#__PURE__*/_jsx(\"div\",{children:\"Cart is empty\"}):cartItems.map(function(item){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-image\",children:/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'/images/'+item.image,alt:\"productimg\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-name\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\"+item.product,children:item.name})}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Qty:\",/*#__PURE__*/_jsx(\"select\",{value:item.qty,onChange:function onChange(e){return dispatch(addToCart(item.product,e.target.value));},children:_toConsumableArray(Array(item.countInStock).keys()).map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x+1,children:x+1},x+1);})}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"button\",onClick:function onClick(){return removeFromCartHandler(item.product);},children:\"Delete\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-price\",children:[\"$\",item.price]})]});})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-action\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Subtotal ( \",cartItems.reduce(function(a,c){return a+c.qty;},0),\" items) : $ \",cartItems.reduce(function(a,c){return a+c.price*c.qty;},0)]}),/*#__PURE__*/_jsx(\"button\",{onClick:checkoutHandler,className:\"button primary full-width\",disabled:cartItems.length===0,children:\"Proceed to Checkout\"})]})]});}export default CartScreen;","map":{"version":3,"sources":["C:/xampp_1/htdocs/reactshop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","addToCart","removeFromCart","useDispatch","useSelector","Link","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","removeFromCartHandler","checkoutHandler","history","push","length","map","item","process","env","PUBLIC_URL","image","product","name","e","target","value","Array","countInStock","keys","x","price","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nfunction CartScreen(props) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () =>{\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ?\r\n                        <div>\r\n                            Cart is empty\r\n                        </div>\r\n                        :\r\n                        cartItems.map(item =>\r\n                            <li>\r\n                                <div className=\"cart-image\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/' + item.image} alt=\"productimg\"/>\r\n                                </div>\r\n                                <div className=\"cart-name\">\r\n                                    <div>\r\n                                        <Link to={\"/product/\" + item.product}>\r\n                                            {item.name}\r\n                                        </Link>\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        Qty:\r\n                                        <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                            {[...Array(item.countInStock).keys()].map(x =>\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <button className=\"button\" type=\"button\" onClick={() => removeFromCartHandler(item.product)}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"cart-price\">\r\n                                    ${item.price}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                :\r\n                $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}